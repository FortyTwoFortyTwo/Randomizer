"Games"
{
	"tf"
	{
		"Addresses"
		{
			"Patch_HealthDemomanClassCheck"
			{
				"signature" "CTFPlayer::GetMaxHealthForBuffing"
				"linux"
				{
					"offset"	"386"
				}
				"windows"
				{
					"offset"	"81"
				}
			}
			"Patch_SpeedDemomanClassCheck"
			{
				"signature" "CTFPlayer::TeamFortress_CalculateMaxSpeed"
				"linux"
				{
					"offset"	"672"
				}
				"windows"
				{
					"offset"	"692"
				}
			}
			"Patch_SpeedMedic1ClassCheck"
			{
				"signature" "CTFPlayer::TeamFortress_CalculateMaxSpeed"
				"linux"
				{
					"offset"	"1173"
				}
				"windows"
				{
					"offset"	"979"
				}
			}
			"Patch_SpeedMedic2ClassCheck"
			{
				"signature" "CTFPlayer::TeamFortress_CalculateMaxSpeed"
				"linux"
				{
					"offset"	"1733"
				}
				"windows"
				{
					"offset"	"1270"
				}
			}
			"Patch_SpeedHeavyClassCheck"
			{
				"signature" "CTFPlayer::TeamFortress_CalculateMaxSpeed"
				"linux"
				{
					"offset"	"2141"
				}
				"windows"
				{
					"offset"	"1436"
				}
			}
			"Patch_SpeedScoutClassCheck"
			{
				"signature" "CTFPlayer::TeamFortress_CalculateMaxSpeed"
				"linux"
				{
					"offset"	"2150"
				}
				"windows"
				{
					"offset"	"1519"
				}
			}
		}
		"Keys"
		{
			"Patch_HealthDemomanClassCheck"
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90"	// Replace 'jnz short' to NOP (skip)
			}
			"Patch_SpeedDemomanClassCheck"
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90"	// Replace 'jnz short' to NOP (skip)
			}
			"Patch_SpeedMedic1ClassCheck"
			{
				"linux"		"\x90\x90\x90\x90\x90\x90"	// Replace 'jz' (if '==' jump) to NOP (skip)
				"windows"	"\x90\x90\x90\x90\x90\x90"	// Replace 'jz' (if '==' jump) to NOP (skip)
			}
			"Patch_SpeedMedic2ClassCheck"
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90"	// Replace 'jnz short' to NOP (skip)
			}
			"Patch_SpeedHeavyClassCheck"
			{
				"linux"		"\x90\x90\x90\x90\x90\x90"	// Replace 'jz' (if '==' jump) to to NOP (skip)
				"windows"	"\xEB"	// Replace 'jnz short' to 'jmp short' (always jump)
			}
			"Patch_SpeedScoutClassCheck"
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90"	// Replace 'jnz short' to NOP (skip)
			}
		}
		"Signatures"
		{
			"CTFPlayer::GetMaxAmmo"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10GetMaxAmmoEii"
				"windows"	"\x55\x8B\xEC\x8B\x45\x0C\x56\x57\x8B\xF9\x83\xF8\xFF\x75\x2A\xFF\xB7\x2A\x2A\x2A\x2A\xEB\x01\x50\xE8"
			}
			"CTFPlayer::Taunt"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer5TauntE8taunts_ti"
				"windows"	"\x55\x8B\xEC\x81\xEC\xD4\x00\x00\x00\x53\x56\x57\x8B\xF9\xE8"
			}
			"CTFPlayer::CanAirDash"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer10CanAirDashEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x57\x8B\xF9\xF7\x87\x84\x1A\x00\x00\x00\x00\x04\x00"
			}
			"CTFPlayer::ValidateWeapons"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer15ValidateWeaponsEP19TFPlayerClassData_tb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x38\x81\x65\xE4\xFF\xFF\x0F\xFF"
			}
			"CTFPlayer::ManageBuilderWeapons"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer20ManageBuilderWeaponsEP19TFPlayerClassData_t"
				"windows"	"\x55\x8B\xEC\x83\xEC\x28\x53\x56\x8B\xF1\xC7\x45\xF0\x30\x00\x00\x00"
			}
			"CTFPlayer::AddObject"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer9AddObjectEP11CBaseObject"
				"windows"	"\x55\x8B\xEC\x53\x56\x57\x8B\x7D\x08\x8B\xD9\x85\xFF\x74\x2A\x8B\x07\x8B\xCF\xFF\x50\x08\x8B\xCF"
			}
			"CTFPlayer::RemoveObject"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer12RemoveObjectEP11CBaseObject"
				"windows"	"\x55\x8B\xEC\x8B\xD1\x56\x8B\xB2\x8C\x21\x00\x00"
			}
			"CTFPlayer::DoClassSpecialSkill"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer19DoClassSpecialSkillEv"
				"windows"	"\x56\x8B\xF1\x8B\x06\x8B\x80\x04\x01\x00\x00\xFF\xD0\x84\xC0\x75\x2A\x32\xC0\x5E\xC3\xF7\x86\x84\x1A\x00\x00\x00\x00\x04\x00"
			}
			"CTFPlayer::EndClassSpecialSkill"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer20EndClassSpecialSkillEv"
				"windows"	"\x56\x8B\xF1\x8B\x06\x8B\x80\x04\x01\x00\x00\xFF\xD0\x84\xC0\x75\x2A\x5E\xC3"
			}
			"CTFPlayer::GetChargeEffectBeingProvided"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer28GetChargeEffectBeingProvidedEv"
				"windows"	"\x55\x8B\xEC\x51\x56\x8B\xF1\x8D\x86\x0C\x21\x00\x00"
			}
			"CTFPlayer::IsPlayerClass"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer13IsPlayerClassEi"
				"windows"	"\x55\x8B\xEC\x8D\x81\x0C\x21\x00\x00"
			}
			"CTFPlayer::GetLoadoutItem"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer14GetLoadoutItemEiib"
				"windows"	"\x55\x8B\xEC\x51\x53\x56\x8B\xF1\x8B\x0D\x2A\x2A\x2A\x2A\x57\x89\x75\xFC"
			}
			"CTFPlayer::GetEntityForLoadoutSlot"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer23GetEntityForLoadoutSlotEib"
				"windows"	"\x55\x8B\xEC\x51\x53\x8B\x5D\x08\x57\x8B\xF9\x89\x7D\xFC\x83\xFB\x07"
			}
			"CTFPlayer::GetMaxHealthForBuffing"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer22GetMaxHealthForBuffingEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\x53\x56\x57\x8B\xF9\xFF\xB7\x10\x21\x00\x00"
			}
			"CTFPlayer::TeamFortress_CalculateMaxSpeed"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer30TeamFortress_CalculateMaxSpeedEb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x18\x83\x3D\x2A\x2A\x2A\x2A\x00"
			}
			"CTFPlayerClassShared::CanBuildObject"
			{
				"library"	"server"
				"linux"		"@_ZN20CTFPlayerClassShared14CanBuildObjectEi"
				"windows"	"\x55\x8B\xEC\x53\x56\xFF\x71\x04"
			}
			"CTFGameStats::Event_PlayerFiredWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameStats23Event_PlayerFiredWeaponEP9CTFPlayerb"
				"windows"	"\x55\x8B\xEC\xA1\x2A\x2A\x2A\x2A\x56\x8B\x75\x08"
			}
			"HandleRageGain"
			{
				"library"	"server"
				"linux"		"@_Z14HandleRageGainP9CTFPlayerjff"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x0F\x84\x2A\x2A\x2A\x2A\x53"
			}
		}
		"Offsets"
		{
			"CBaseCombatCharacter::GiveAmmo"
			{
				"linux"		"256"
				"windows"	"255"
			}
			"CBaseCombatWeapon::SecondaryAttack"
			{
				"linux"		"286"
				"windows"	"280"
			}
			"CBaseCombatWeapon::GetSlot"
			{
				"linux"		"332"
				"windows"	"326"
			}
			"CTFWeaponBaseMelee::Swing"
			{
				"linux"		"478"
				"windows"	"471"
			}
			"CItem::MyTouch"
			{
				"linux"		"222"
				"windows"	"221"
			}
			"CTFGrenadePipebombProjectile::PipebombTouch"
			{
				"linux"		"254"
				"windows"	"253"
			}
			"CTFDecapitationMeleeWeaponBase::OnDecapitation"
			{
				"linux"		"482"
				"windows"	"475"
			}
			"CBaseObject::CanBeUpgraded"
			{
				"linux"		"376"
				"windows"	"375"
			}
			"CBasePlayer::ForceRespawn"
			{
				"linux"		"330"
				"windows"	"329"
			}
			"CBasePlayer::EquipWearable"
			{
				"linux"		"431"
				"windows"	"430"
			}
			"CTFPlayer::GiveNamedItem"
			{
				"linux"		"484"
				"windows"	"477"
			}
			"CTFPlayer::ClientCommand"
			{
			 "linux"  "373"
			 "windows" "372"
			}
			"CGameRules::FrameUpdatePostEntityThink"
			{
				"linux"		"16"
				"windows"	"15"
			}
			"CEconItemView::m_iItemDefinitionIndex"
			{
				"linux"		"4"
				"windows"	"4"
			}
		}
		"Functions"
		{
			"CTFPlayer::GetMaxAmmo"
			{
				"signature"	"CTFPlayer::GetMaxAmmo"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"iAmmoIndex"
					{
						"type"	"int"
					}
					"iClassNumber"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::Taunt"
			{
				"signature"	"CTFPlayer::Taunt"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"taunts_t"
					{
						"type"	"int"
					}
					"int"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::CanAirDash"
			{
				"signature"	"CTFPlayer::CanAirDash"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CTFPlayer::ValidateWeapons"
			{
				"signature"	"CTFPlayer::ValidateWeapons"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pData"
					{
						"type"	"objectptr"
					}
					"bResetWeapons"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::ManageBuilderWeapons"
			{
				"signature"	"CTFPlayer::ManageBuilderWeapons"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pData"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFPlayer::DoClassSpecialSkill"
			{
				"signature"	"CTFPlayer::DoClassSpecialSkill"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CTFPlayer::EndClassSpecialSkill"
			{
				"signature"	"CTFPlayer::EndClassSpecialSkill"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CTFPlayer::GetChargeEffectBeingProvided"
			{
				"signature"	"CTFPlayer::GetChargeEffectBeingProvided"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
			}
			"CTFPlayer::IsPlayerClass"
			{
				"signature"	"CTFPlayer::IsPlayerClass"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"iClass"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::GetLoadoutItem"
			{
				"signature"	"CTFPlayer::GetLoadoutItem"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"iClass"
					{
						"type"	"int"
					}
					"iSlot"
					{
						"type"	"int"
					}
					"bReportWhitelistFails"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::GetEntityForLoadoutSlot"
			{
				"signature"	"CTFPlayer::GetEntityForLoadoutSlot"
				"callconv"	"thiscall"
				"return"	"cbaseentity"
				"this"		"entity"
				"arguments"
				{
					"iSlot"
					{
						"type"	"int"
					}
					"bool"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayerClassShared::CanBuildObject"
			{
				"signature"	"CTFPlayerClassShared::CanBuildObject"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"address"
				"arguments"
				{
					"iObjectType"
					{
						"type"	"int"
					}
				}
			}
			"CTFGameStats::Event_PlayerFiredWeapon"
			{
				"signature"	"CTFGameStats::Event_PlayerFiredWeapon"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
					"bCritical"
					{
						"type"	"bool"
					}
				}
			}
			"HandleRageGain"
			{
				"signature"	"HandleRageGain"
				"callconv"	"cdecl"
				"return"	"void"
				"this"		"ignore"
				"arguments"
				{
					"pPlayer"
					{
						"type"    "cbaseentity"
					}
					"iRequiredBuffFlags"
					{
						"type"	"int"
					}
					"flDamage"
					{
						"type"	"float"
					}
					"fInverseRageGainScale"
					{
						"type"	"float"
					}
				}
			}
			"CBaseCombatCharacter::GiveAmmo"
			{
				"offset"	"CBaseCombatCharacter::GiveAmmo"
				"hooktype"	"entity"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"iCount"
					{
						"type"	"int"
					}
					"iAmmoIndex"
					{
						"type"	"int"
					}
					"bSuppressSound"
					{
						"type"	"bool"
					}
				}
			}
			"CBaseCombatWeapon::SecondaryAttack"
			{
				"offset"	"CBaseCombatWeapon::SecondaryAttack"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CTFWeaponBaseMelee::Swing"
			{
				"offset"	"CTFWeaponBaseMelee::Swing"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CItem::MyTouch"
			{
				"offset"	"CItem::MyTouch"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFGrenadePipebombProjectile::PipebombTouch"
			{
				"offset"	"CTFGrenadePipebombProjectile::PipebombTouch"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pOther"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFDecapitationMeleeWeaponBase::OnDecapitation"
			{
				"offset"	"CTFDecapitationMeleeWeaponBase::OnDecapitation"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBaseObject::CanBeUpgraded"
			{
				"offset"	"CBaseObject::CanBeUpgraded"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBasePlayer::ForceRespawn"
			{
				"offset"	"CBasePlayer::ForceRespawn"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CBasePlayer::EquipWearable"
			{
				"offset"	"CBasePlayer::EquipWearable"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pItem"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::GiveNamedItem"
			{
				"offset"	"CTFPlayer::GiveNamedItem"
				"hooktype"	"entity"
				"return"	"cbaseentity"
				"this"		"entity"
				"arguments"
				{
					"pszName"
					{
						"type"	"charptr"
					}
					"iSubType"
					{
						"type"	"int"
					}
					"pItem"
					{
						"type"	"objectptr"
					}
					"b"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::ClientCommand"
			{
				"offset"	"CTFPlayer::ClientCommand"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pArgs"
					{
						"type"	"objectptr"
					}
				}
			}
			"CGameRules::FrameUpdatePostEntityThink"
			{
				"offset"	"CGameRules::FrameUpdatePostEntityThink"
				"hooktype"	"gamerules"
				"return"	"void"
				"this"		"ignore"
			}
		}
	}
}