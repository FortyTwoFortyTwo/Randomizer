"Games"
{
	"tf"
	{
		"Keys"
		{
			"PatchReplace_01"	//Demoman class check for eyelander health
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90"	// Replace 'jnz short' to NOP (skip)
			}
			"PatchReplace_02"	//Demoman class check for eyelander speed and charging
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90"	// Replace 'jnz short' to NOP (skip)
			}
			"PatchReplace_03"	//Medic class check for healing charging
			{
				"linux"		"\x90\x90\x90\x90\x90\x90"	// Replace 'jnz' to NOP (skip)
				"windows"	"\x90\x90\x90\x90\x90\x90"	// Replace 'jz' (if '==' jump) to NOP (skip)
			}
			"PatchReplace_04"	//Medic class check for Overdose speed
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90"	// Replace 'jnz short' to NOP (skip)
			}
			"PatchReplace_05"	//Heavy class check for steak speed
			{
				"linux"		"\x90\x90\x90\x90\x90\x90"	// Replace 'jz' (if '==' jump) to to NOP (skip)
				"windows"	"\xEB"	// Replace 'jnz short' to 'jmp short' (always jump)
			}
			"PatchReplace_06"	//Scout class check for Baby Face Blaster and Crit-A-Cola speed
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90"	// Replace 'jnz short' to NOP (skip)
			}
			"PatchReplace_07"	//Spy class check for Your Eternal Reward silent kill
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90"	// Replace 'jnz short' to NOP (skip)
			}
			"PatchReplace_08"	//Demoman class check for kill refilling meter
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90\x90\x90\x90\x90"	// Replace 'jz' (if '==' jump) to to NOP (skip)
			}
			"PatchReplace_09"	//Sniper class check for Hitman's Heatmaker rage on kill
			{
				"linux"		"\x90\xE9"	// Replace 'jz' (if '==' jump) to 'jmp' (always jump)
				"windows"	"\x90\x90"	// Replace 'jnz short' to NOP (skip)
			}
			"PatchReplace_IsPlayerClass"	//Given class check, this patch makes it always return true
			{
				// \xB8\x01\x00\x00\x00                            mov     eax, 1
				// \x5D                                            pop     ebp
				// \xC3                                            retn
				"linux"		"\xB8\x01\x00\x00\x00\x5D\xC3"
				
				// \xB8\x01\x00\x00\x00                            mov     eax, 1
				// \x90                                            nop
				"windows"	"\xB8\x01\x00\x00\x00\x90"
			}
		}
		"Addresses"
		{
			"PatchSig_01"
			{
				"signature" "PatchSig_01"
				"windows"
				{
					"offset"	"7"	//Start is pushed back by 7 to make good unique sig
				}
			}
			"PatchSig_02"
			{
				"signature" "PatchSig_02"
			}
			"PatchSig_03"
			{
				"signature" "PatchSig_03"
			}
			"PatchSig_04"
			{
				"signature" "PatchSig_04"
			}
			"PatchSig_05"
			{
				"signature" "PatchSig_05"
			}
			"PatchSig_06"
			{
				"signature" "PatchSig_06"
			}
			"PatchSig_07"
			{
				"signature" "PatchSig_07"
			}
			"PatchSig_08"
			{
				"signature" "PatchSig_08"
			}
			"PatchSig_09"
			{
				"signature" "PatchSig_09"
			}
			"PatchSig_IsPlayerClass"
			{
				"signature" "PatchSig_IsPlayerClass"
				"linux"
				{
					"offset"	"2"	//Start is pushed back by 2 to make good unique sig
				}
				"windows"
				{
					"offset"	"3"	//Start is pushed back by 3 to make good unique sig
				}
			}
		}
		"Signatures"
		{
			"PatchSig_01"	//CTFPlayer::GetMaxHealthForBuffing
			{
				"linux"		"\x0F\x84\x2A\x2A\x2A\x2A\x89\x3C\x24\xE8\x2A\x2A\x2A\x2A\xC7\x44\x24\x2A\x2A\x2A\x2A\x00\x01\xD8"
				"windows"	"\x83\xBF\x2A\x2A\x2A\x2A\x04\x75\x2A\x6A\x00"
			}
			"PatchSig_02"	//CTFPlayer::TeamFortress_CalculateMaxSpeed
			{
				"linux"		"\x0F\x84\x2A\x2A\x2A\x2A\xA1\x2A\x2A\x2A\x2A\x80\xBB\x2A\x1E\x00\x00\x00"
				"windows"	"\x75\x2A\x6A\x00\x68\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\x6A\x00\x6A\x40\x8B\xCE"
			}
			"PatchSig_03"	//CTFPlayer::TeamFortress_CalculateMaxSpeed
			{
				"linux"		"\x0F\x85\x2A\x2A\x2A\x2A\x8B\x45\xB4\x85\xC0\x0F\x84\x2A\x2A\x2A\x2A"
				"windows"	"\x0F\x85\x2A\x2A\x2A\x2A\x85\xDB\x0F\x84\x2A\x2A\x2A\x2A\x6A\x00"
			}
			"PatchSig_04"	//CTFPlayer::TeamFortress_CalculateMaxSpeed
			{
				"linux"		"\x0F\x84\x2A\x2A\x2A\x2A\x8B\x45\xB4\xC7\x44\x24\x2A\x2A\x2A\x2A\x00\xC7\x44\x24\x2A\x2A\x2A\x2A\x00"
				"windows"	"\x75\x2A\x6A\x00\x68\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\x6A\x00\x6A\x32"
			}
			"PatchSig_05"	//CTFPlayer::TeamFortress_CalculateMaxSpeed
			{
				"linux"		"\x0F\x84\x2A\x2A\x2A\x2A\x83\xFE\x01\x0F\x84\x2A\x2A\x2A\x2A\xA1\x2A\x2A\x2A\x2A\x85\xC0"
				"windows"	"\x75\x2A\xF3\x0F\x10\x45\xE8\x8B\xCF"
			}
			"PatchSig_06"	//CTFPlayer::TeamFortress_CalculateMaxSpeed
			{
				"linux"		"\x0F\x84\x2A\x2A\x2A\x2A\xA1\x2A\x2A\x2A\x2A\x85\xC0\x74\x2A\x80\xB8\x2A\x09\x00\x00\x00\x74\x2A\x89\x1C\x24"
				"windows"	"\x75\x2A\x6A\x55\x8B\xCE\xE8\x2A\x2A\x2A\x2A\x85\xC0"
			}
			"PatchSig_07"	//CTFPlayer::Event_KilledOther
			{
				"linux"		"\x0F\x84\x2A\x2A\x2A\x2A\x8B\x03\x8D\x95\x2A\x2A\x2A\x2A\xC7\x44\x24\x2A\x2A\x2A\x2A\x00"
				"windows"	"\x74\x2A\x56\x68\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x83\xC4\x08\x85\xC0\x75\x2A"
			}
			"PatchSig_08"	//CTFPlayer::Event_KilledOther
			{
				"linux"		"\x0F\x84\x2A\x2A\x2A\x2A\x83\xF8\x02\x0F\x84\x2A\x2A\x2A\x2A\x8B\x83\x2A\x2A\x2A\x2A"
				"windows"	"\x0F\x84\x2A\x2A\x2A\x2A\x8B\x4D\x08\xDD\xD8"
			}
			"PatchSig_09"	//CTFPlayer::Event_KilledOther
			{
				"linux"		"\x0F\x84\x2A\x2A\x2A\x2A\x8B\x83\x2A\x2A\x2A\x2A\x31\xF6\x31\xFF\x85\xC0\x0F\x8E\x2A\x2A\x2A\x2A"
				"windows"	"\x74\x2A\x6A\x01\x6A\x00\x53\x68\x2A\x2A\x2A\x2A\x51\xD9\x1C\x24\xE8\x2A\x2A\x2A\x2A\xD9\xEE"
			}
			"PatchSig_IsPlayerClass"	//CTFPlayer::IsPlayerClass
			{
				"linux"		"\x74\x2A\x8B\x80\x2A\x2A\x2A\x2A\x39\x45\x0C"
				"windows"	"\x8B\x40\x04\x3B\x45\x08"
			}
			"CBaseAnimating::SelectWeightedSequence"
			{
				"library"	"server"
				"linux"		"@_ZN14CBaseAnimating22SelectWeightedSequenceE8Activity"
				"windows"	"\x55\x8B\xEC\x56\x8B\xF1\x57\x80\xBE\x69\x03\x00\x00\x00\x8B\xBE\xD8\x03\x00\x00\x75\x2A\x83\xBE\x98\x04\x00\x00\x00\x75\x2A\xE8\x2A\x2A\x2A\x2A\x85\xC0\x74\x2A\x8B\xCE\xE8\x2A\x2A\x2A\x2A\x8B\x86\x98\x04\x00\x00\x85\xC0\x74\x2A\x83\x38\x00\x75\x2A\x33\xC0\x57\xFF\x75\x08\x50\xE8\x2A\x2A\x2A\x2A\x83\xC4\x0C\x5F"
			}
			"CTFPlayer::GiveAmmo"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer8GiveAmmoEiib11EAmmoSource"
				"windows"	"\x55\x8B\xEC\x51\x53\x56\x8B\x75\x08\x8B\xD9\x89\x75\xFC"
			}
			"CTFPlayer::GetMaxAmmo"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10GetMaxAmmoEii"
				"windows"	"\x55\x8B\xEC\x8B\x45\x0C\x56\x57\x8B\xF9\x83\xF8\xFF\x75\x2A\xFF\xB7\x2A\x2A\x2A\x2A\xEB\x01\x50\xE8"
			}
			"CTFPlayer::Taunt"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer5TauntE8taunts_ti"
				"windows"	"\x55\x8B\xEC\x81\xEC\xD4\x00\x00\x00\x53\x56\x57\x8B\xF9\xE8"
			}
			"CTFPlayer::CanAirDash"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer10CanAirDashEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x57\x8B\xF9\xF7\x87\xB4\x1B\x00\x00\x00\x00\x04\x00"
			}
			"CTFPlayer::AddObject"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer9AddObjectEP11CBaseObject"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x57\x8B\xF9\x85\xF6\x74\x2A\x8B\x06\x8B\xCE\xFF\x50\x08\x8B\x00\x89\x45\x08\xEB\x2A\xC7\x45\x08\xFF\xFF\xFF\xFF\x8D\x45\x08\x50\x8D\x8F\xB0\x22\x00\x00"
			}
			"CTFPlayer::RemoveObject"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer12RemoveObjectEP11CBaseObject"
				"windows"	"\x55\x8B\xEC\x56\x8B\xF1\x57\x8B\xBE\xBC\x22\x00\x00"
			}
			"CTFPlayer::Weapon_GetWeaponByType"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer22Weapon_GetWeaponByTypeEi"
				"windows"	"\x55\x8B\xEC\x53\x56\x57\x33\xF6\x8D\xB9\x70\x07\x00\x00"
			}
			"CTFPlayer::DoClassSpecialSkill"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer19DoClassSpecialSkillEv"
				"windows"	"\x56\x8B\xF1\x8B\x06\x8B\x80\x0C\x01\x00\x00\xFF\xD0\x84\xC0\x75\x2A\x32\xC0\x5E\xC3\xF7\x86\xB4\x1B\x00\x00\x00\x00\x04\x00"
			}
			"CTFPlayer::EndClassSpecialSkill"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer20EndClassSpecialSkillEv"
				"windows"	"\x56\x8B\xF1\x8B\x06\x8B\x80\x0C\x01\x00\x00\xFF\xD0\x84\xC0\x75\x2A\x5E\xC3"
			}
			"CTFPlayer::GetChargeEffectBeingProvided"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer28GetChargeEffectBeingProvidedEv"
				"windows"	"\x55\x8B\xEC\x51\x56\x8B\xF1\x8D\x86\x3C\x22\x00\x00"
			}
			"CTFPlayer::GetLoadoutItem"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer14GetLoadoutItemEiib"
				"windows"	"\x55\x8B\xEC\x51\x53\x56\x8B\xF1\x8B\x0D\x2A\x2A\x2A\x2A\x57\x89\x75\xFC"
			}
			"CTFPlayer::GetMaxHealthForBuffing"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer22GetMaxHealthForBuffingEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\x53\x56\x57\x8B\xF9\xFF\xB7\x40\x22\x00\x00"
			}
			"CTFPlayer::TeamFortress_CalculateMaxSpeed"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer30TeamFortress_CalculateMaxSpeedEb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x18\x83\x3D\x2A\x2A\x2A\x2A\x00"
			}
			"CTFPlayer::TakeHealth"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10TakeHealthEfi"
				"windows"	"\x55\x8B\xEC\x56\x8B\xF1\x6A\x1F"
			}
			"CTFPlayer::CheckBlockBackstab"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer18CheckBlockBackstabEPS_"
				"windows"	"\x55\x8B\xEC\x83\xEC\x14\x53\x56\x57\x8B\xF9\x8D\x9F\xE0\x1A\x00\x00"
			}
			"CTFPlayer::CanPickupBuilding"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer17CanPickupBuildingEP11CBaseObject"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\x53\x57\x8B\x7D\x08"
			}
			"CTFPlayer::DropRune"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer8DropRuneEbi"
				"windows"	"\x55\x8B\xEC\x83\xEC\x0C\x53\x56\x8B\xF1\x57\x8D\x8E\xE0\x1A\x00\x00"
			}
			"CTFPlayerClassShared::CanBuildObject"
			{
				"library"	"server"
				"linux"		"@_ZN20CTFPlayerClassShared14CanBuildObjectEi"
				"windows"	"\x55\x8B\xEC\x53\x56\xFF\x71\x04"
			}
			"CEconEntity::UpdateModelToClass"
			{
				"library"	"server"
				"linux"		"@_ZN11CEconEntity18UpdateModelToClassEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x0C\x53\x56\x8B\x35\x2A\x2A\x2A\x2A\x8B\xD9"
			}
			"CTFKnife::DisguiseOnKill"
			{
				"library"	"server"
				"linux"		"@_ZN8CTFKnife14DisguiseOnKillEv"
				"windows"	"\x53\x56\x8B\xF1\x8B\x96\x28\x08\x00\x00"
			}
			"CTFLunchBox::ApplyBiteEffects"
			{
				"library"	"server"
				"linux"		"@_ZN11CTFLunchBox16ApplyBiteEffectsEP9CTFPlayer"
				"windows"	"\x55\x8B\xEC\x51\x53\x8B\xD9\x56\x57\x6A\x01"
			}
			"CTFSpellBook::RollNewSpell"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFSpellBook12RollNewSpellEib"
				"windows"	"\x55\x8B\xEC\x57\x8B\xF9\x83\xBF\x24\x08\x00\x00\x00"
			}
			"CTFGameStats::Event_PlayerFiredWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameStats23Event_PlayerFiredWeaponEP9CTFPlayerb"
				"windows"	"\x55\x8B\xEC\xA1\x2A\x2A\x2A\x2A\x56\x8B\x75\x08"
			}
			"CTFPlayerShared::UpdateRageBuffsAndRage"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared22UpdateRageBuffsAndRageEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x53\x8B\xD9\x8B\x8B\x8C\x01\x00\x00\x8B\x01\x8B\x80\x0C\x01\x00\x00\xFF\xD0\x84\xC0\x75\x2A"
			}
			"CTFPlayerShared::ModifyRage"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared10ModifyRageEf"
				"windows"	"\x55\x8B\xEC\xF3\x0F\x10\x81\x88\x02\x00\x00"
			}
			"CTFPlayerShared::ActivateRageBuff"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared16ActivateRageBuffEP11CBaseEntityi"
				"windows"	"\x55\x8B\xEC\x51\xF3\x0F\x10\x05\x2A\x2A\x2A\x2A\x56\x8B\xF1"
			}
			"CTFPlayerShared::SetCarryingRuneType"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared19SetCarryingRuneTypeE11RuneTypes_t"
				"windows"	"\x55\x8B\xEC\x53\x8B\x5D\x08\x56\x57\x8B\xF9\x83\xFB\xFF\x74\x2A"
			}
			"CAttributeManager::AttribHookValue<float>"
			{
				"library"	"server"
				"linux"		"@_ZN17CAttributeManager15AttribHookValueIfEET_S1_PKcPK11CBaseEntityP10CUtlVectorIPS4_10CUtlMemoryIS8_iEEb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x0C\x8B\x0D\x2A\x2A\x2A\x2A\x53\x56\x57\x33\xF6\x33\xFF\x89\x75\xF4\x89\x7D\xF8\x8B\x41\x08\x85\xC0\x74\x2A\x68\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\x6A\x6B"
			}
			"CTFGameRules::ApplyOnDamageModifyRules"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameRules24ApplyOnDamageModifyRulesER15CTakeDamageInfoP11CBaseEntityb"
				"windows"	"\x55\x8B\xEC\x81\xEC\xAC\x00\x00\x00\x56\x8B\x75\x0C"
			}
			"HandleRageGain"
			{
				"library"	"server"
				"linux"		"@_Z14HandleRageGainP9CTFPlayerjff"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x0F\x84\x2A\x2A\x2A\x2A\x53"
			}
			"ActivityList_IndexForName"
			{
				"library"	"server"
				"linux"		"@_Z25ActivityList_IndexForNamePKc"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x75\x2A\x83\xC8\xFF"
			}
		}
		"Offsets"
		{
			"CBaseEntity::GetBaseEntity"
			{
				"linux"		"6"
				"windows"	"5"
			}
			"CBaseEntity::Event_Killed"
			{
				"linux"		"69"
				"windows"	"68"
			}
			"CBaseEntity::GetMaxHealth"
			{
				"linux"		"123"
				"windows"	"122"
			}
			"CEconEntity::TranslateViewmodelHandActivityInternal"
			{
				"linux"		"235"
				"windows"	"229"
			}
			"CBaseCombatWeapon::SecondaryAttack"
			{
				"linux"		"293"
				"windows"	"287"
			}
			"CTFWeaponBase::GetEffectBarAmmo"
			{
				"linux"		"468"
				"windows"	"461"
			}
			"CTFWeaponBaseMelee::Swing"
			{
				"linux"		"485"
				"windows"	"478"
			}
			"CBaseObject::Killed"
			{
				"linux"		"356"
				"windows"	"355"
			}
			"CBaseObject::CanBeUpgraded"
			{
				"linux"		"383"
				"windows"	"382"
			}
			"CBasePlayer::ForceRespawn"
			{
				"linux"		"337"
				"windows"	"336"
			}
			"CBasePlayer::EquipWearable"
			{
				"linux"		"439"
				"windows"	"438"
			}
			"CBaseCombatCharacter::GetAmmoCount"
			{
				"linux"		"266"
				"windows"	"265"
			}
			"CBaseCombatCharacter::Weapon_CanSwitchTo"
			{
				"linux"		"277"
				"windows"	"276"
			}
			"CTFPlayer::ClientCommand"
			{
				"linux"		"380"
				"windows"	"379"
			}
			"CTFPlayer::GiveNamedItem"
			{
				"linux"		"493"
				"windows"	"486"
			}
			"CTFPlayer::InitClass"
			{
				"linux"		"495"
				"windows"	"488"
			}
			"CGameRules::FrameUpdatePostEntityThink"
			{
				"linux"		"16"
				"windows"	"15"
			}
		}
		"Functions"
		{
			"CTFPlayer::GiveAmmo"
			{
				"signature"	"CTFPlayer::GiveAmmo"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"iCount"
					{
						"type"	"int"
					}
					"iAmmoIndex"
					{
						"type"	"int"
					}
					"bSuppressSound"
					{
						"type"	"bool"
					}
					"eAmmoSource"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::GetMaxAmmo"
			{
				"signature"	"CTFPlayer::GetMaxAmmo"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"iAmmoIndex"
					{
						"type"	"int"
					}
					"iClassNumber"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::Taunt"
			{
				"signature"	"CTFPlayer::Taunt"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"taunts_t"
					{
						"type"	"int"
					}
					"int"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::CanAirDash"
			{
				"signature"	"CTFPlayer::CanAirDash"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CTFPlayer::Weapon_GetWeaponByType"
			{
				"signature"	"CTFPlayer::Weapon_GetWeaponByType"
				"callconv"	"thiscall"
				"return"	"cbaseentity"
				"this"		"entity"
				"arguments"
				{
					"iType"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::DoClassSpecialSkill"
			{
				"signature"	"CTFPlayer::DoClassSpecialSkill"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CTFPlayer::EndClassSpecialSkill"
			{
				"signature"	"CTFPlayer::EndClassSpecialSkill"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CTFPlayer::GetChargeEffectBeingProvided"
			{
				"signature"	"CTFPlayer::GetChargeEffectBeingProvided"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
			}
			"CTFPlayer::GetMaxHealthForBuffing"
			{
				"signature"	"CTFPlayer::GetMaxHealthForBuffing"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
			}
			"CTFPlayer::TeamFortress_CalculateMaxSpeed"
			{
				"signature"	"CTFPlayer::TeamFortress_CalculateMaxSpeed"
				"callconv"	"thiscall"
				"return"	"float"
				"this"		"entity"
				"arguments"
				{
					"bIgnoreSpecialAbility"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::TakeHealth"
			{
				"signature"	"CTFPlayer::TakeHealth"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"flHealth"
					{
						"type"	"float"
					}
					"bitsDamageType"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::CheckBlockBackstab"
			{
				"signature"	"CTFPlayer::CheckBlockBackstab"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pTFAttacker"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::CanPickupBuilding"
			{
				"signature"	"CTFPlayer::CanPickupBuilding"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pPickupObject"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::DropRune"
			{
				"signature"	"CTFPlayer::DropRune"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"bApplyForce"
					{
						"type"	"bool"
					}
					"nTeam"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayerClassShared::CanBuildObject"
			{
				"signature"	"CTFPlayerClassShared::CanBuildObject"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"address"
				"arguments"
				{
					"iObjectType"
					{
						"type"	"int"
					}
				}
			}
			"CEconEntity::UpdateModelToClass"
			{
				"signature" "CEconEntity::UpdateModelToClass"
				"callconv" "thiscall"
				"return" "void"
				"this" "entity"
			}
			"CTFKnife::DisguiseOnKill"
			{
				"signature" "CTFKnife::DisguiseOnKill"
				"callconv" "thiscall"
				"return" "void"
				"this" "entity"
			}
			"CTFLunchBox::ApplyBiteEffects"
			{
				"signature" "CTFLunchBox::ApplyBiteEffects"
				"callconv" "thiscall"
				"return" "void"
				"this" "entity"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFGameStats::Event_PlayerFiredWeapon"
			{
				"signature"	"CTFGameStats::Event_PlayerFiredWeapon"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
					"bCritical"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayerShared::UpdateRageBuffsAndRage"
			{
				"signature"	"CTFPlayerShared::UpdateRageBuffsAndRage"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"address"
			}
			"CTFPlayerShared::ModifyRage"
			{
				"signature"	"CTFPlayerShared::ModifyRage"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
					"flDelta"
					{
						"type"	"float"
					}
				}
			}
			"CTFPlayerShared::ActivateRageBuff"
			{
				"signature"	"CTFPlayerShared::ActivateRageBuff"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
					"pItem"
					{
						"type"	"cbaseentity"
					}
					"iBuffType"
					{
						"type"	"int"
					}
				}
			}
			"CTFGameRules::ApplyOnDamageModifyRules"
			{
				"signature"	"CTFGameRules::ApplyOnDamageModifyRules"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"address"
				"arguments"
				{
					"info"
					{
						"type"	"objectptr"
					}
					"pVictimBaseEntity"
					{
						"type"	"cbaseentity"
					}
					"bAllowDamage"
					{
						"type"	"bool"
					}
				}
			}
			"HandleRageGain"
			{
				"signature"	"HandleRageGain"
				"callconv"	"cdecl"
				"return"	"void"
				"this"		"ignore"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
					"iRequiredBuffFlags"
					{
						"type"	"int"
					}
					"flDamage"
					{
						"type"	"float"
					}
					"fInverseRageGainScale"
					{
						"type"	"float"
					}
				}
			}
			"CBaseEntity::Event_Killed"
			{
				"offset"	"CBaseEntity::Event_Killed"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"info"
					{
						"type"    "objectptr"
					}
				}
			}
			"CEconEntity::TranslateViewmodelHandActivityInternal"
			{
				"offset"	"CEconEntity::TranslateViewmodelHandActivityInternal"
				"hooktype"	"entity"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"actBase"
					{
						"type"    "int"
					}
				}
			}
			"CBaseCombatWeapon::SecondaryAttack"
			{
				"offset"	"CBaseCombatWeapon::SecondaryAttack"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CTFWeaponBase::GetEffectBarAmmo"
			{
				"offset"	"CTFWeaponBase::GetEffectBarAmmo"
				"hooktype"	"entity"
				"return"	"int"
				"this"		"entity"
			}
			"CTFWeaponBaseMelee::Swing"
			{
				"offset"	"CTFWeaponBaseMelee::Swing"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBaseObject::Killed"
			{
				"offset"	"CBaseObject::Killed"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"linux"
				{
					"arguments"
					{
						"info"
						{
							"type"    "objectptr"
						}
					}
				}
			}
			"CBaseObject::CanBeUpgraded"
			{
				"offset"	"CBaseObject::CanBeUpgraded"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBasePlayer::ForceRespawn"
			{
				"offset"	"CBasePlayer::ForceRespawn"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CBasePlayer::EquipWearable"
			{
				"offset"	"CBasePlayer::EquipWearable"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pItem"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBaseCombatCharacter::GetAmmoCount"
			{
				"offset"	"CBaseCombatCharacter::GetAmmoCount"
				"hooktype"	"entity"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"iAmmoIndex"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::ClientCommand"
			{
				"offset"	"CTFPlayer::ClientCommand"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pArgs"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFPlayer::GiveNamedItem"
			{
				"offset"	"CTFPlayer::GiveNamedItem"
				"hooktype"	"entity"
				"return"	"cbaseentity"
				"this"		"entity"
				"arguments"
				{
					"pszName"
					{
						"type"	"charptr"
					}
					"iSubType"
					{
						"type"	"int"
					}
					"pItem"
					{
						"type"	"objectptr"
					}
					"b"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::InitClass"
			{
				"offset"	"CTFPlayer::InitClass"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CGameRules::FrameUpdatePostEntityThink"
			{
				"offset"	"CGameRules::FrameUpdatePostEntityThink"
				"hooktype"	"gamerules"
				"return"	"void"
				"this"		"ignore"
			}
		}
	}
}
